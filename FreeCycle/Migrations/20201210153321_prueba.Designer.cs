// <auto-generated />
using System;
using FreeCycle.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreeCycle.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20201210153321_prueba")]
    partial class prueba
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.DatosAcademicosPersona", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("datosAcademicosPersonas");
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.DatosEspecificosPersona", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Ciudad")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CiudadExpedicionIdentificacion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ClaseLibretaMilitar")
                        .HasColumnType("int");

                    b.Property<string>("Departamento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DepartamentoExpedicionIdentificacion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<int?>("FactorRHSangre")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaExpedicionIdentificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaVencecategoriaA")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaVencecategoriaB")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaVencecategoriaC")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NumeroDistritoMilitar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NumeroLibretaMilitar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PaseDeConduccionCategoriaA")
                        .HasColumnType("int");

                    b.Property<int?>("PaseDeConduccionCategoriaB")
                        .HasColumnType("int");

                    b.Property<int?>("PaseDeConduccionCategoriaC")
                        .HasColumnType("int");

                    b.Property<bool>("PaseDeConduccionTiene")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SeguridadSocialEPS")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SeguridadSocialFondoDePensiones")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SeguridadSocialNumeroDeBeneficiaros")
                        .HasColumnType("int");

                    b.Property<int?>("TallaCamisa")
                        .HasColumnType("int");

                    b.Property<int?>("TallaPantalon")
                        .HasColumnType("int");

                    b.Property<int?>("TallaZapato")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDeSangre")
                        .HasColumnType("int");

                    b.Property<int?>("TipoVehiculo")
                        .HasColumnType("int");

                    b.Property<bool>("VehiculoTiene")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("DatosEspecificosPersonas");
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.DatosGeneralesPersona", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("AnhosExperiencia")
                        .HasColumnType("int");

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int?>("MesesExperiencia")
                        .HasColumnType("int");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PersonaContactoNombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PersonaContactoTelefono")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Profesion")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DatosGeneralesPersonas");
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.DatosLaboralesPersona", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CargoDesempeñado")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CargoJefe")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Ciudad")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("DatosGeneralesPersonaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MotivoRetiro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NombreJefe")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NombreTemporal")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("Salario")
                        .HasColumnType("double");

                    b.Property<string>("TelefonoJefe")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TrabajoActual")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("DatosGeneralesPersonaId");

                    b.ToTable("datosLaboralesPersonas");
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.EstudioPersona", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("AñoTerminacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("DatosAcademicosPersonaID")
                        .HasColumnType("bigint");

                    b.Property<int>("Finalizo")
                        .HasColumnType("int");

                    b.Property<string>("InstitucionAcademica")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NivelEstudio")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PeriodosAprobados")
                        .HasColumnType("int");

                    b.Property<string>("ProgramaAcademico")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("DatosAcademicosPersonaID");

                    b.ToTable("estudioPersonas");
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.IdiomaPersona", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("DatosAcademicosPersonaID")
                        .HasColumnType("bigint");

                    b.Property<int>("DominioIdioma")
                        .HasColumnType("int");

                    b.Property<string>("Idioma")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("DatosAcademicosPersonaID");

                    b.ToTable("idiomaPersonas");
                });

            modelBuilder.Entity("FreeCycle.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.DatosAcademicosPersona", b =>
                {
                    b.HasOne("EdinsaWebServer.Models.Trabajo.Personas.DatosGeneralesPersona", "DatosGeneralesPersona")
                        .WithOne("DatosAcademicos")
                        .HasForeignKey("EdinsaWebServer.Models.Trabajo.Personas.DatosAcademicosPersona", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.DatosEspecificosPersona", b =>
                {
                    b.HasOne("EdinsaWebServer.Models.Trabajo.Personas.DatosGeneralesPersona", "DatosGeneralesPersona")
                        .WithOne("DatosEspecificos")
                        .HasForeignKey("EdinsaWebServer.Models.Trabajo.Personas.DatosEspecificosPersona", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.DatosLaboralesPersona", b =>
                {
                    b.HasOne("EdinsaWebServer.Models.Trabajo.Personas.DatosGeneralesPersona", "DatosGeneralesPersona")
                        .WithMany("DatosLaborales")
                        .HasForeignKey("DatosGeneralesPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.EstudioPersona", b =>
                {
                    b.HasOne("EdinsaWebServer.Models.Trabajo.Personas.DatosAcademicosPersona", "DatosAcademicosPersona")
                        .WithMany("EstudiosPersona")
                        .HasForeignKey("DatosAcademicosPersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EdinsaWebServer.Models.Trabajo.Personas.IdiomaPersona", b =>
                {
                    b.HasOne("EdinsaWebServer.Models.Trabajo.Personas.DatosAcademicosPersona", "DatosAcademicosPersona")
                        .WithMany("IdiomasPersona")
                        .HasForeignKey("DatosAcademicosPersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
